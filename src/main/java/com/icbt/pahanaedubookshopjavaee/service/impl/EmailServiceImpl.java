package com.icbt.pahanaedubookshopjavaee.service.impl;

import com.icbt.pahanaedubookshopjavaee.dto.SupportRequestDTO;
import com.icbt.pahanaedubookshopjavaee.service.EmailService;
import com.icbt.pahanaedubookshopjavaee.util.constants.EmailConstants;

import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Properties;
import java.util.Date;

public class EmailServiceImpl implements EmailService {

    @Override
    public void sendSupportRequestEmail(SupportRequestDTO supportRequest) throws Exception {
        Properties props = getEmailProperties();
        
        Session session = Session.getInstance(props, new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(EmailConstants.EMAIL_USERNAME, EmailConstants.EMAIL_PASSWORD);
            }
        });

        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(EmailConstants.EMAIL_USERNAME));
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(EmailConstants.SUPPORT_EMAIL));
        message.setSubject(EmailConstants.SUPPORT_REQUEST_SUBJECT_PREFIX + supportRequest.getSubject());
        message.setSentDate(new Date());
        
        String emailBody = buildSupportEmailBody(supportRequest);
        message.setContent(emailBody, "text/html; charset=utf-8");
        
        Transport.send(message);
    }

    @Override
    public void sendSupportConfirmationEmail(String userEmail, String ticketId) throws Exception {
        if (userEmail == null || userEmail.trim().isEmpty()) {
            return; // Skip if no user email provided
        }
        
        Properties props = getEmailProperties();
        
        Session session = Session.getInstance(props, new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(EmailConstants.EMAIL_USERNAME, EmailConstants.EMAIL_PASSWORD);
            }
        });

        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(EmailConstants.EMAIL_USERNAME));
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(userEmail));
        message.setSubject(EmailConstants.CONFIRMATION_SUBJECT_PREFIX + ticketId);
        message.setSentDate(new Date());
        
        String emailBody = buildConfirmationEmailBody(ticketId);
        message.setContent(emailBody, "text/html; charset=utf-8");
        
        Transport.send(message);
    }

    private Properties getEmailProperties() {
        Properties props = new Properties();
        props.put("mail.smtp.host", EmailConstants.SMTP_HOST);
        props.put("mail.smtp.port", EmailConstants.SMTP_PORT);
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.ssl.trust", EmailConstants.SMTP_HOST);
        return props;
    }

    private String buildSupportEmailBody(SupportRequestDTO supportRequest) {
        return String.format(
            "<html>" +
            "<body style=\"font-family: Arial, sans-serif;\">" +
            "<h2 style=\"color: #007bff;\">New Support Request</h2>" +
            "<div style=\"background-color: #f8f9fa; padding: 20px; border-radius: 5px;\">" +
            "<p><strong>Ticket ID:</strong> %s</p>" +
            "<p><strong>Issue Type:</strong> %s</p>" +
            "<p><strong>Priority:</strong> <span style=\"color: %s;\">%s</span></p>" +
            "<p><strong>Subject:</strong> %s</p>" +
            "<p><strong>User Email:</strong> %s</p>" +
            "<p><strong>Submitted:</strong> %s</p>" +
            "</div>" +
            "<h3>Description:</h3>" +
            "<div style=\"background-color: #ffffff; padding: 15px; border-left: 4px solid #007bff;\">" +
            "%s" +
            "</div>" +
            "<h3>System Information:</h3>" +
            "<ul>" +
            "<li><strong>User Agent:</strong> %s</li>" +
            "<li><strong>Timestamp:</strong> %s</li>" +
            "</ul>" +
            "<hr>" +
            "<p style=\"color: #6c757d; font-size: 12px;\">" +
            "This email was automatically generated by Pahana Edu Bookshop Support System." +
            "</p>" +
            "</body>" +
            "</html>",
            supportRequest.getTicketId(),
            supportRequest.getIssueType(),
            getPriorityColor(supportRequest.getPriority()),
            supportRequest.getPriority().toUpperCase(),
            supportRequest.getSubject(),
            supportRequest.getUserEmail() != null ? supportRequest.getUserEmail() : "Not provided",
            supportRequest.getTimestamp(),
            supportRequest.getDescription().replace("\n", "<br>"),
            supportRequest.getUserAgent(),
            supportRequest.getTimestamp()
        );
    }

    private String buildConfirmationEmailBody(String ticketId) {
        return String.format(
            "<html>" +
            "<body style=\"font-family: Arial, sans-serif;\">" +
            "<h2 style=\"color: #28a745;\">Support Request Received</h2>" +
            "<p>Dear Customer,</p>" +
            "<p>Thank you for contacting Pahana Edu Bookshop support. We have received your support request.</p>" +
            "<div style=\"background-color: #d4edda; padding: 15px; border-radius: 5px; border-left: 4px solid #28a745;\">" +
            "<p><strong>Your Ticket ID:</strong> %s</p>" +
            "<p>Please keep this ticket ID for your records.</p>" +
            "</div>" +
            "<h3>What happens next?</h3>" +
            "<ul>" +
            "<li>Our support team will review your request</li>" +
            "<li>You will receive a response based on your priority level</li>" +
            "<li>We may contact you for additional information if needed</li>" +
            "</ul>" +
            "<h3>Response Times:</h3>" +
            "<ul>" +
            "<li><strong>Urgent/High:</strong> 2-4 hours</li>" +
            "<li><strong>Medium:</strong> 24 hours</li>" +
            "<li><strong>Low:</strong> 48-72 hours</li>" +
            "</ul>" +
            "<p>If you have any urgent issues, please call us at +94 11 234 5678.</p>" +
            "<p>Best regards,<br>Pahana Edu Bookshop Support Team</p>" +
            "<hr>" +
            "<p style=\"color: #6c757d; font-size: 12px;\">" +
            "This is an automated confirmation email. Please do not reply to this email." +
            "</p>" +
            "</body>" +
            "</html>",
            ticketId
        );
    }

    private String getPriorityColor(String priority) {
        switch (priority.toLowerCase()) {
            case "urgent":
                return "#dc3545";
            case "high":
                return "#fd7e14";
            case "medium":
                return "#ffc107";
            case "low":
                return "#28a745";
            default:
                return "#6c757d";
        }
    }
}